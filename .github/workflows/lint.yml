name: lint
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v*'
      - 'v*.*.*'

jobs:
  lint:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    steps:
      # install
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install npm
        run: |
          yarn --frozen-lockfile
      # lint
      - name: Check Type
        run: |
          npm run ci:check:type
      - name: Check Code Format
        run: |
          npm run ci:check:format
      - name: Lint Code
        run: |
          npm run lint
  lint-mince:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    steps:
      # install
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install npm
        run: |
          yarn --frozen-lockfile
      # lint-mince
      - name: Lint Markdown
        run: |
          echo 'Lint Markdown'
      - name: Lint Config
        run: |
          echo 'Lint Config'
      - name: Lint Commit
        run: |
          echo 'Lint Commit'
  test:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    steps:
      # install
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install npm
        run: |
            yarn --frozen-lockfile
      # test
      - name: Run Unit, Integration, and Snapshot Test with Coverage
        run: |
          echo 'Run Unit, Integration, and Snapshot Test with Coverage'
      - name: Run E2E and Snapshot Test
        run: |
          echo 'Run E2E and Snapshot Test'
      - name: Check Code Coverage
        run: |
          echo 'Check Code Coverage'
      - name: Upload Test Coverage as Artifact
        run: |
          echo 'Upload Test Coverage as Artifact'
      - name: Upload Test Coverage to Codecov
        run: |
          echo 'Upload Test Coverage to Codecov'
